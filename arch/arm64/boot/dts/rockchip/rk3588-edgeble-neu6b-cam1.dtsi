// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (c) 2023 Edgeble AI Technologies Pvt. Ltd.
 *
 * Edgeble Neu6B CAM1-IMX415.
 */

/ {
	dvdd_1v1_cam1: dvdd-1v1-cam1-regulator {
		compatible = "regulator-fixed";
		regulator-name = "dvdd_1v1_cam1";
		enable-active-high;
		gpio = <&gpio1 RK_PA4 GPIO_ACTIVE_HIGH>;
		pinctrl-names = "default";
		pinctrl-0 = <&pwdn_gpio_cam1>;
		regulator-always-on;
		regulator-boot-on;
		regulator-min-microvolt = <1100000>;
		regulator-max-microvolt = <1100000>;
		vin-supply = <&vcc5v0_sys>;
	};

	dovdd_1v8_cam1: dovdd-1v8-cam1-regulator {
		compatible = "regulator-fixed";
		regulator-name = "dovdd_1v8_cam1";
		regulator-always-on;
		regulator-boot-on;
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		vin-supply = <&dvdd_1v1_cam1>;
	};

	avdd_2v9_cam1: avdd-2v9-cam1-regulator {
		compatible = "regulator-fixed";
		regulator-name = "avdd_2v9_cam1";
		regulator-always-on;
		regulator-boot-on;
		regulator-min-microvolt = <2900000>;
		regulator-max-microvolt = <2900000>;
		vin-supply = <&dovdd_1v8_cam1>;
	};
};

&pinctrl {
	cam1 {
		pwdn_gpio_cam1: pwdn-gpio-cam1 {
			rockchip,pins = <1 RK_PA4 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};
};

&i2c4 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c4m1_xfer>;
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	imx415_1: imx415@1a {
		compatible = "sony,imx415";
		reg = <0x1a>;
		clocks = <&cru CLK_MIPI_CAMARAOUT_M2>;
		clock-names = "xvclk";
		pinctrl-names = "default";
		pinctrl-0 = <&mipim0_camera2_clk>;
		power-domains = <&power RK3588_PD_VI>;
		reset-gpios = <&gpio1 RK_PA5 GPIO_ACTIVE_LOW>;
		avdd-supply = <&avdd_2v9_cam1>;
		dovdd-supply = <&dovdd_1v8_cam1>;
		dvdd-supply = <&dvdd_1v1_cam1>;
		rockchip,camera-module-index = <1>;
		rockchip,camera-module-facing = "back";
		rockchip,camera-module-name = "EDGEBLE-CAM4K-A00";
		rockchip,camera-module-lens-name = "DEFAULT";
		port {
			imx415_2_out0: endpoint {
				remote-endpoint = <&mipidcphy1>;
				data-lanes = <1 2 3 4>;
			};
		};
	};
};

&mipi_dcphy1 {
	status = "okay";
};

&csi2_dcphy1 {
	status = "okay";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;

			mipidcphy1: endpoint@1 {
				reg = <1>;
				remote-endpoint = <&imx415_2_out0>;
				data-lanes = <1 2 3 4>;
			};
		};

		port@1 {
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;

			csidcphy1_out: endpoint@0 {
				reg = <0>;
				remote-endpoint = <&mipi1_csi2_input>;
			};
		};
	};
};

&mipi1_csi2 {
	status = "okay";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;

			mipi1_csi2_input: endpoint@1 {
				reg = <1>;
				remote-endpoint = <&csidcphy1_out>;
			};
		};

		port@1 {
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;

			mipi1_csi2_output: endpoint@0 {
				reg = <0>;
				remote-endpoint = <&cif_mipi1_in0>;
			};
		};
	};
};

&rkcif {
	status = "okay";
};

&rkcif_mipi_lvds1 {
	status = "okay";

	port {
		cif_mipi1_in0: endpoint {
			remote-endpoint = <&mipi1_csi2_output>;
		};
	};
};

&rkcif_mipi_lvds1_sditf {
	status = "okay";

	port {
		mipi_lvds1_sditf: endpoint {
			remote-endpoint = <&isp1_vir0>;
		};
	};
};

&rkcif_mmu {
	status = "okay";
};

&rkisp1 {
	status = "okay";
};

&isp1_mmu {
	status = "okay";
};

&rkisp1_vir0 {
	status = "okay";

	port {
		#address-cells = <1>;
		#size-cells = <0>;

		isp1_vir0: endpoint@0 {
			reg = <0>;
			remote-endpoint = <&mipi_lvds1_sditf>;
		};
	};
};
